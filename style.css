/* Basic reset to remove padding, margin, and set box-sizing to border-box for all elements */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Main body styling to set a default font and background */
body {
    font-family: Arial, sans-serif; /* Sets a clean, readable font */
    background-color: #f4f4f9; /* Light gray background for slight contrast */
    display: flex; /* Enables flexbox layout which is perfect for centering items */
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
    min-height: 100vh; /* Full viewport height */
    padding: 20px; /* Adds some padding around the content */
}

/* Card-style container for the form */
.card {
    background: white; /* White background for the card */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 2px 10px rgba(0,0,0,0.1); /* Subtle shadow for 3D effect */
    padding: 20px; /* Padding inside the card */
    width: 100%; /* Full width but will be constrained by max-width */
    max-width: 400px; /* Max width of the card */
}

/* Style for the textarea to make it visually appealing */
textarea {
    width: 100%; /* Takes full width of the parent */
    border: 1px solid #ccc; /* Light grey border */
    border-radius: 4px; /* Slightly rounded corners for the textarea */
    padding: 10px; /* Padding inside the textarea */
    height: 100px; /* Set a fixed height */
    resize: none; /* Disables resizing */
}

/* Style for the button to make it stand out */
button {
    background-color: #007BFF; /* Bootstrap blue */
    color: white; /* Text color */
    border: none; /* No border */
    padding: 10px 20px; /* Padding around the text */
    border-radius: 5px; /* Rounded corners */
    cursor: pointer; /* Pointer cursor on hover */
    display: block; /* Makes it a block element */
    width: 100%; /* Full width */
    margin-top: 10px; /* Margin on the top */
}

/* Ensures the button has a nice hover effect */
button:hover {
    background-color: #0056b3; /* Darker shade on hover */
}
Step 2: Linking the CSS to Your HTML
Now, integrate this CSS into your index.html by linking it in the <head> section:

Updated index.html
html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Measurement Converter</title>
    <link rel="stylesheet" href="styles.css"> <!-- Link to the CSS file -->
</head>
<body>
    <div class="card"> <!-- Card class for styling -->
        <h2>Input measurements here:</h2>
        <textarea id="measurements" placeholder="Enter measurements here..."></textarea><br>
        <button onclick="convertMeasurements()">Submit</button>
        <h2>Results:</h2>
        <ol id="results"></ol>
    </div>

    <script>
        function convertMeasurements() {
            const input = document.getElementById('measurements').value;
            const lines = input.split('\n');
            const resultsList = document.getElementById('results');
            resultsList.innerHTML = '';

            lines.forEach((line) => {
                const dimensions = line.split('x').map(dim => parseFloat(dim.trim()));
                if (dimensions.length === 2) {
                    const width = dimensions[0];
                    const height = dimensions[1];
                    const squareFeet = (width * 0.0833) * (height * 0.0833);
                    const resultItem = document.createElement('li');
                    resultItem.textContent = `${squareFeet.toFixed(3)} square feet`;
                    resultsList.appendChild(resultItem);
                }
            });
        }
    </script>
</body>
</html>